spring:
  application:
    name: auth_service

  rsocket:
    server:
      port: 7000
      ssl:
        enabled: true
        client-auth: need
        key-store: ${AUTH_KEYSTORE_PATH}
        key-store-type: PKCS12
        key-store-password: ${AUTH_KEYSTORE_PASSWORD}
        trust-store: ${TRUSTSTORE_PATH}
        trust-store-type: PKCS12
        trust-store-password: ${TRUSTSTORE_PASSWORD}

        
    redis:
    port: 6379
    username: ${REDIS_USERNAME}
    password: ${REDIS_PASSWORD}
    timeout: 60000
    client-name: eCommerceRedis
    ssl: false # TODO enable this

  main:
    web-application-type: none

  r2dbc:
    url: r2dbc:postgresql://localhost:5432/auth
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/auth
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

jwt:
  access:
    private: ${JWT_ACCESS_PRIVATE_KEY}
    public: ${JWT_ACCESS_PUBLIC_KEY}
    expiration: 86400000
  refresh:
    private: ${JWT_REFRESH_PRIVATE_KEY}
    public: ${JWT_REFRESH_PUBLIC_KEY}
    expiration: 604800000
  service:
    private: ${JWT_SERVICE_PRIVATE_KEY}
    public: ${JWT_SERVICE_PUBLIC_KEY}
    expiration: 300000

# logging:
#   level:
#     io.netty.handler.ssl: DEBUG
#     root: DEBUG
#     org.springframework: DEBUG
#     io.rsocket: DEBUG
